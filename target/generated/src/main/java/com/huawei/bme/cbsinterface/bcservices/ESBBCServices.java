package com.huawei.bme.cbsinterface.bcservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-09-11T03:27:57.331+01:00
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "ESB_BC_Services",
                  wsdlLocation = "file:/C:/Users/o00440392/eclipse-workspace/esb/src/main/resources/wsdl/ESB_BC_Services.wsdl",
                  targetNamespace = "http://www.huawei.com/bme/cbsinterface/bcservices")
public class ESBBCServices extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.huawei.com/bme/cbsinterface/bcservices", "ESB_BC_Services");
    public final static QName BcServicesEndpoint = new QName("http://www.huawei.com/bme/cbsinterface/bcservices", "BcServicesEndpoint");
    public final static QName BcServicesEndpointJMS = new QName("http://www.huawei.com/bme/cbsinterface/bcservices", "BcServicesEndpoint_JMS");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/o00440392/eclipse-workspace/esb/src/main/resources/wsdl/ESB_BC_Services.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ESBBCServices.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/o00440392/eclipse-workspace/esb/src/main/resources/wsdl/ESB_BC_Services.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ESBBCServices(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ESBBCServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ESBBCServices() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ESBBCServices(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ESBBCServices(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ESBBCServices(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BcServices
     */
    @WebEndpoint(name = "BcServicesEndpoint")
    public BcServices getBcServicesEndpoint() {
        return super.getPort(BcServicesEndpoint, BcServices.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BcServices
     */
    @WebEndpoint(name = "BcServicesEndpoint")
    public BcServices getBcServicesEndpoint(WebServiceFeature... features) {
        return super.getPort(BcServicesEndpoint, BcServices.class, features);
    }


    /**
     *
     * @return
     *     returns BcServices
     */
    @WebEndpoint(name = "BcServicesEndpoint_JMS")
    public BcServices getBcServicesEndpointJMS() {
        return super.getPort(BcServicesEndpointJMS, BcServices.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BcServices
     */
    @WebEndpoint(name = "BcServicesEndpoint_JMS")
    public BcServices getBcServicesEndpointJMS(WebServiceFeature... features) {
        return super.getPort(BcServicesEndpointJMS, BcServices.class, features);
    }

}
