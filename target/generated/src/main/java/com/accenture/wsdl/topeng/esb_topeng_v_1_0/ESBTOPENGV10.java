package com.accenture.wsdl.topeng.esb_topeng_v_1_0;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-09-11T03:33:52.349+01:00
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "ESB_TOPENG_V_1_0",
                  wsdlLocation = "file:/C:/Users/o00440392/eclipse-workspace/esb/src/main/resources/wsdl/ESB_TOPENG_V_1_0.wsdl",
                  targetNamespace = "http://www.accenture.com/wsdl/TOPENG/ESB_TOPENG_V_1_0")
public class ESBTOPENGV10 extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.accenture.com/wsdl/TOPENG/ESB_TOPENG_V_1_0", "ESB_TOPENG_V_1_0");
    public final static QName ESBTOPENGPortTypeEndpointJMS = new QName("http://www.accenture.com/wsdl/TOPENG/ESB_TOPENG_V_1_0", "ESBTOPENGPortTypeEndpoint_JMS");
    public final static QName ESBTOPENGPortTypeEndpoint = new QName("http://www.accenture.com/wsdl/TOPENG/ESB_TOPENG_V_1_0", "ESBTOPENGPortTypeEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/o00440392/eclipse-workspace/esb/src/main/resources/wsdl/ESB_TOPENG_V_1_0.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ESBTOPENGV10.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/o00440392/eclipse-workspace/esb/src/main/resources/wsdl/ESB_TOPENG_V_1_0.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ESBTOPENGV10(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ESBTOPENGV10(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ESBTOPENGV10() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ESBTOPENGV10(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ESBTOPENGV10(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ESBTOPENGV10(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns TABSToTIBCOPortType
     */
    @WebEndpoint(name = "ESBTOPENGPortTypeEndpoint_JMS")
    public TABSToTIBCOPortType getESBTOPENGPortTypeEndpointJMS() {
        return super.getPort(ESBTOPENGPortTypeEndpointJMS, TABSToTIBCOPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TABSToTIBCOPortType
     */
    @WebEndpoint(name = "ESBTOPENGPortTypeEndpoint_JMS")
    public TABSToTIBCOPortType getESBTOPENGPortTypeEndpointJMS(WebServiceFeature... features) {
        return super.getPort(ESBTOPENGPortTypeEndpointJMS, TABSToTIBCOPortType.class, features);
    }


    /**
     *
     * @return
     *     returns TABSToTIBCOPortType
     */
    @WebEndpoint(name = "ESBTOPENGPortTypeEndpoint")
    public TABSToTIBCOPortType getESBTOPENGPortTypeEndpoint() {
        return super.getPort(ESBTOPENGPortTypeEndpoint, TABSToTIBCOPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TABSToTIBCOPortType
     */
    @WebEndpoint(name = "ESBTOPENGPortTypeEndpoint")
    public TABSToTIBCOPortType getESBTOPENGPortTypeEndpoint(WebServiceFeature... features) {
        return super.getPort(ESBTOPENGPortTypeEndpoint, TABSToTIBCOPortType.class, features);
    }

}
